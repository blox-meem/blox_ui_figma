import { 
    AutomaticSize, 
    BorderMode, 
    ButtonStyle, 
    Camera, 
    Color3, 
    ElasticBehavior, 
    FrameStyle, 
    GuiObject, 
    LocalizationTable, 
    ResamplerMode, 
    RobloxRect, 
    ScaleType, 
    ScrollBarInset, 
    ScrollingDirection, 
    SelectionBehavior, 
    SizeConstraint, 
    TextDirection, 
    UDim2, 
    Vector2, 
    Vector3, 
    VerticalScrollBarPosition
} from "./lua";

export declare type AllExternalRobloxProperties = {
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
        autoButtonColor?: boolean,
        modal?: boolean,
        selected?: boolean,
        buttonstyle?: ButtonStyle,  
    //
    framestyle: FrameStyle,
    //
        automaticCanvasSize?: AutomaticSize,
        bottomImage?: string,
        canvasPosition?: Vector2,
        elasticBehavior?: ElasticBehavior,
        horizontalScrollBarInset?: ScrollBarInset,
        midImage?: string,
        scrollBarImageColor3?: Color3,
        scrollBarImageTransparency?: number,
        scrollBarThickness?: number,
        scrollingDirection?: ScrollingDirection,
        scrollingEnabled?: boolean,
        topImage?: string,
        verticalScrollBarInset?: ScrollBarInset,
        verticalScrollBarPosition?: VerticalScrollBarPosition,
    //
    looped?: boolean,
    playing?: boolean,
    timePosition?: number,
    volume?: number,
    //
        ambient?: Color3,
        currentCamera?: Camera,
        lightColor?: Color3,
        lightDirection?: Vector3,
    //
        imageRectOffset?: Vector2,
        imageRectSize?: Vector2,
        resampleMode?: ResamplerMode,
        scaleType?: ScaleType,
        sliceCenter?: Rect,
        sliceScale?: number,
        tileSize?: UDim2,
    //
    hoverImage?: string,
    pressedImage?: string,
    //
        maxVisibleGraphemes?: number,
        openTypeFeatures?: string,
        richText?: boolean,
        textDirection?: TextDirection,
        textScaled?: boolean,
        textStrokeColor?: Color3,
        textStrokeTransparency?: number,
        textWrapped?: boolean,
    //
    clearTextFocus?: boolean,
    cursorPosition?: number,
    multiLine?: boolean,
    placeholderColor3?: Color3,
    placeholderText?: string,
    selectionStart?: number,
    showNativeInput?: boolean,
    textEditable?: boolean,
};

export declare type ExternalFrameProperties = {
    externalPropertyType: "FRAME",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    framestyle: FrameStyle,
};

export declare type ExternalScrollingFrameProperties = {
    externalPropertyType: "SCROLLINGFRAME",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    automaticCanvasSize?: AutomaticSize,
    bottomImage?: string,
    canvasPosition?: Vector2,
    elasticBehavior?: ElasticBehavior,
    horizontalScrollBarInset?: ScrollBarInset,
    midImage?: string,
    scrollBarImageColor3?: Color3,
    scrollBarImageTransparency?: number,
    scrollBarThickness?: number,
    scrollingDirection?: ScrollingDirection,
    scrollingEnabled?: boolean,
    topImage?: string,
    verticalScrollBarInset?: ScrollBarInset,
    verticalScrollBarPosition?: VerticalScrollBarPosition,
};

export declare type ExternalVideoFrameProperties = {
    externalPropertyType: "VIDEOFRAME",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    looped?: boolean,
    playing?: boolean,
    timePosition?: number,
    volume?: number,
};

export declare type ExternalViewportFrameProperties = {
    externalPropertyType: "VIEWPORTFRAME",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    ambient?: Color3,
    currentCamera?: Camera,
    lightColor?: Color3,
    lightDirection?: Vector3,
};

export declare type ExternalImageLabelProperties = {
    externalPropertyType: "IMAGELABEL",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    imageRectOffset?: Vector2,
    imageRectSize?: Vector2,
    resampleMode?: ResamplerMode,
    scaleType?: ScaleType,
    sliceCenter?: RobloxRect,
    sliceScale?: number,
    tileSize?: UDim2,
};

export declare type ExternalImageButtonProperties = {
    externalPropertyType: "IMAGEBUTTON",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    autoButtonColor?: boolean,
    modal?: boolean,
    selected?: boolean,
    buttonstyle?: ButtonStyle,  
    //
    imageRectOffset?: Vector2,
    imageRectSize?: Vector2,
    resampleMode?: ResamplerMode,
    scaleType?: ScaleType,
    sliceCenter?: RobloxRect,
    sliceScale?: number,
    tileSize?: UDim2,
    //
    hoverImage?: string,
    pressedImage?: string,
};

export declare type ExternalTextLabelProperties = {
    externalPropertyType: "TEXTLABEL",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    maxVisibleGraphemes?: number,
    openTypeFeatures?: string,
    richText?: boolean,
    textDirection?: TextDirection,
    textScaled?: boolean,
    textStrokeColor?: Color3,
    textStrokeTransparency?: number,
    textWrapped?: boolean,
};

export declare type ExternalTextButtonProperties = {
    externalPropertyType: "TEXTBUTTON",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    autoButtonColor?: boolean,
    modal?: boolean,
    selected?: boolean,
    buttonstyle?: ButtonStyle, 
    //
    maxVisibleGraphemes?: number,
    openTypeFeatures?: string,
    richText?: boolean,
    textDirection?: TextDirection,
    textScaled?: boolean,
    textStrokeColor?: Color3,
    textStrokeTransparency?: number,
    textWrapped?: boolean, 
};

export declare type ExternalTextBoxProperties = {
    externalPropertyType: "TEXTBOX",
    //
    archivable?: boolean,
    //
    autoLocalize?: boolean,
    rootLocalizationTable?: LocalizationTable,
    selectionBehaviorDown?: SelectionBehavior,
    selectionBehaviorLeft?: SelectionBehavior,
    selectionBehaviorRight?: SelectionBehavior,
    selectionBehaviorUp?: SelectionBehavior,
    selectionGroup: boolean,
    //
        active?: boolean,
        anchorPoint?: Vector2,
        automaticSize?: AutomaticSize,
        borderColor3?: Color3,
        borderMode?: BorderMode,
        borderSizePixel?: number,
        interactable?: boolean,
        layoutOrder?: number,
        nextSelectionDown?: GuiObject,
        nextSelectionLeft?: GuiObject,
        nextSelectionRight?: GuiObject,
        nextSelectionUp?: GuiObject,
        selectable?: boolean,
        selectionImageObject?: GuiObject,
        selectionOrder?: number,
        sizeConstraint?: SizeConstraint,
        zIndex?: number,
    //
    maxVisibleGraphemes?: number,
    openTypeFeatures?: string,
    richText?: boolean,
    textDirection?: TextDirection,
    textScaled?: boolean,
    textStrokeColor?: Color3,
    textStrokeTransparency?: number,
    textWrapped?: boolean,
    //
    clearTextFocus?: boolean,
    cursorPosition?: number,
    multiLine?: boolean,
    placeholderColor3?: Color3,
    placeholderText?: string,
    selectionStart?: number,
    showNativeInput?: boolean,
    textEditable?: boolean,
};

export declare type ExternalRobloxProperties =
    | ExternalFrameProperties
    | ExternalScrollingFrameProperties
    | ExternalVideoFrameProperties
    | ExternalViewportFrameProperties
    | ExternalImageLabelProperties
    | ExternalImageButtonProperties
    | ExternalTextLabelProperties
    | ExternalTextButtonProperties
    | ExternalTextBoxProperties;
